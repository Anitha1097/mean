{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../post.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../auth/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nimport * as i6 from \"@angular/material/expansion\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"@angular/material/paginator\";\n\nfunction PostListComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/post/edit\", a1];\n};\n\nfunction PostListComponent_div_1_mat_accordion_1_mat_action_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-action-row\")(1, \"button\", 6);\n    i0.ɵɵtext(2, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function PostListComponent_div_1_mat_accordion_1_mat_action_row_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const postData_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.onDelete(postData_r4.id);\n    });\n    i0.ɵɵtext(4, \"DELETE\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const postData_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, postData_r4.id));\n  }\n}\n\nfunction PostListComponent_div_1_mat_accordion_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-accordion\", 3)(1, \"mat-expansion-panel\")(2, \"mat-expansion-panel-header\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelement(5, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PostListComponent_div_1_mat_accordion_1_mat_action_row_8_Template, 5, 3, \"mat-action-row\", 0);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const postData_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", postData_r4.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", postData_r4.imagePath, i0.ɵɵsanitizeUrl)(\"alt\", postData_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(postData_r4.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.userIsAuthenticated || ctx_r2.socialUserIsAuthenticated) && ctx_r2.userId === postData_r4.creator);\n  }\n}\n\nfunction PostListComponent_div_1_mat_paginator_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-paginator\", 8);\n    i0.ɵɵlistener(\"page\", function PostListComponent_div_1_mat_paginator_2_Template_mat_paginator_page_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onChangedPage($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"length\", ctx_r3.totalPosts)(\"pageSize\", ctx_r3.postsPerPage)(\"pageSizeOptions\", ctx_r3.pageSizeOptions);\n  }\n}\n\nfunction PostListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostListComponent_div_1_mat_accordion_1_Template, 9, 5, \"mat-accordion\", 1);\n    i0.ɵɵtemplate(2, PostListComponent_div_1_mat_paginator_2_Template, 1, 3, \"mat-paginator\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.post);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.post.length > 0);\n  }\n}\n\nconst BACKEND_URL = environment.apiUrl + \"/posts/\";\nexport let PostListComponent = /*#__PURE__*/(() => {\n  class PostListComponent {\n    constructor(postService, httpClient, authService) {\n      this.postService = postService;\n      this.httpClient = httpClient;\n      this.authService = authService;\n      this.totalPosts = 0;\n      this.postsPerPage = 2;\n      this.pageSizeOptions = [1, 2, 5, 10];\n      this.userIsAuthenticated = false;\n      this.socialUserIsAuthenticated = false;\n      this.currentPage = 1;\n      this.post = [];\n      this.postsUpdated = new Subject();\n      this.isLoading = false;\n      this.url = 'http://localhost:9000/api/posts/';\n      this.posts1 = [{\n        title: 'First post',\n        content: \"This is firt post's content\"\n      }, {\n        title: 'Second post',\n        content: \"This is second post's content \"\n      }, {\n        title: 'Third post',\n        content: \"This is third post's content\"\n      }];\n      this.postList = [];\n    }\n\n    ngOnInit() {\n      this.isLoading = true;\n      this.postService.getPosts(this.postsPerPage, this.currentPage);\n      this.userId = this.authService.getUserId();\n      this.postsSub = this.postService.getPostUpdateListener().subscribe(postData => {\n        this.isLoading = false;\n        this.totalPosts = postData.postCount;\n        this.post = postData.posts;\n      });\n      this.userIsAuthenticated = this.authService.getIsAuth();\n      this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n      this.authStatusSub = this.authService.getSocialAuthStatusListener().subscribe(isAuthenticated => {\n        this.socialUserIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n    }\n\n    onDelete(postId) {\n      this.postService.deletePost(postId);\n    }\n\n    deletePost(postId) {\n      this.httpClient.delete(BACKEND_URL + postId).subscribe(() => {\n        const updatedPosts = this.posts.filter(post => post.id !== postId);\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n    }\n\n    ngOnDestroy() {\n      this.postsSub.unsubscribe();\n    }\n\n    onChangedPage(pageData) {\n      this.isLoading = true;\n      this.currentPage = pageData.pageIndex + 1;\n      this.postsPerPage = pageData.pageSize;\n      this.postService.getPosts(this.postsPerPage, this.currentPage);\n    }\n\n  }\n\n  PostListComponent.ɵfac = function PostListComponent_Factory(t) {\n    return new (t || PostListComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthServices));\n  };\n\n  PostListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostListComponent,\n    selectors: [[\"app-post-list\"]],\n    inputs: {\n      posts: \"posts\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"multi\", \"true\", 4, \"ngFor\", \"ngForOf\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\", 4, \"ngIf\"], [\"multi\", \"true\"], [1, \"post-image\"], [3, \"src\", \"alt\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\"]],\n    template: function PostListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PostListComponent_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵtemplate(1, PostListComponent_div_1_Template, 3, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.post.length > 0 && !ctx.isLoading);\n      }\n    },\n    directives: [i4.NgIf, i5.MatSpinner, i4.NgForOf, i6.MatAccordion, i6.MatExpansionPanel, i6.MatExpansionPanelHeader, i6.MatExpansionPanelActionRow, i7.MatButton, i8.RouterLink, i9.MatPaginator],\n    styles: [\"[_nghost-%COMP%]{display:block;margin-top:auto}mat-body-1[_ngcontent-%COMP%]{-webkit-text-decoration:center;text-decoration:center}mat-spinner[_ngcontent-%COMP%]{margin:auto}.info-text[_ngcontent-%COMP%]{text-align:center}.post-image[_ngcontent-%COMP%]{width:50%;height:500px}.post-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;box-shadow:1px 1px 5px #00000080}\"]\n  });\n  return PostListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}