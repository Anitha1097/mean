{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport { mimeType } from \"../../mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../post.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../auth/auth.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction PostCreateComponent_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter title\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter content\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r3.postForm.value.title);\n  }\n}\n\nexport class PostCreateComponent {\n  constructor(postService, httpClient, authService) {\n    this.postService = postService;\n    this.httpClient = httpClient;\n    this.authService = authService;\n    this.newPost = 'mean-course';\n    this.post2 = \"\";\n    this.postInput1 = \"\";\n    this.postInput2 = \"\";\n    this.isLoading = true;\n    this.postsPerPage = 2;\n    this.currentPage = 1;\n    this.post = [];\n    this.PostInputData = [];\n    this.postsUpdated = new Subject();\n    this.inputData = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.postForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    }); // this.isLoading = false;\n    //   this.postService.getPosts(this.postsPerPage, this.currentPage);\n    //   this.postsSub = this.postService.getPostUpdateListener()\n    //     .subscribe((postData: {posts: Post[], postCount: number}) => {\n    //       this.isLoading = false;\n    //       this.post = postData.posts;\n    //     });\n  } // onAddPost() {\n  //   this.newPost = 'CONTENT';\n  // }\n  // onAddPost1(postInput) {\n  //   this.newPost = postInput.value;\n  // }\n  // onAddPost2() {\n  //   this.newPost = this.post2;\n  // }\n  // onAddPost3() {\n  //   const posts = {\n  //     title: this.postInput1,\n  //     content: this.postInput2\n  //   };\n  //   this.postService.getAllData()\n  //     .subscribe((data: any) => {\n  //       this.posts = data.posts;\n  //       console.log(data.posts);\n  //       this.inputData.emit(data.posts);\n  //     });\n  // }\n\n\n  onSubmit() {\n    // if (this.postForm.invalid) {\n    //   return;\n    // }\n    // else {\n    //   const post = {\n    //     title: this.postForm.value.title,\n    //     content: this.postForm.value.content,\n    //     image: this.postForm.value.image\n    //   };\n    //   this.postService.postData(post)\n    //     .subscribe((responseData: any) => {\n    //       const post: Post = {\n    //         id: responseData.postId,\n    //         title: responseData.title,\n    //         content: responseData.content\n    //       };\n    //         this.PostInputData.push(post);\n    //       this.inputData.emit(post);\n    //       this.postForm.reset();\n    //     });\n    // }\n    if (this.postForm.invalid) {\n      return;\n    }\n\n    this.postService.postData(this.postForm.value.title, this.postForm.value.content, this.postForm.value.image);\n    this.postForm.reset();\n  }\n\n  onImagePicked(event) {\n    const file = event.target.files[0];\n    this.postForm.patchValue({\n      image: file\n    });\n    this.postForm.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  outputs: {\n    inputData: \"inputData\"\n  },\n  decls: 18,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"title\", \"matInput\", \"\", \"placeholder\", \"Enter title\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"content\", \"matInput\", \"\", \"placeholder\", \"Enter content\"], [\"id\", \"imageUpload\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"mat-form-field\");\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵtemplate(4, PostCreateComponent_mat_error_4_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\");\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, PostCreateComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"p\");\n      i0.ɵɵtext(10, \"Image Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function PostCreateComponent_Template_button_click_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r2 = i0.ɵɵreference(14);\n\n        return _r2.click();\n      });\n      i0.ɵɵtext(12, \"pickfile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6, 7);\n      i0.ɵɵlistener(\"change\", function PostCreateComponent_Template_input_change_13_listener($event) {\n        return ctx.onImagePicked($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, PostCreateComponent_div_15_Template, 2, 2, \"div\", 8);\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Save post\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"title\").invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"content\").invalid);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.imagePreview !== \"\" && ctx.imagePreview && ctx.postForm.get(\"image\").valid);\n    }\n  },\n  directives: [i4.MatCard, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i5.DefaultValueAccessor, i7.MatInput, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i6.MatError, i9.MatButton],\n  styles: [\"mat-card[_ngcontent-%COMP%]{\\n    width: 80%;\\n    margin: auto;\\n}\\nmat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{\\nwidth: 100%;\\n}\\ninput[type='file'][_ngcontent-%COMP%]\\n{\\n    visibility: hidden;\\n}\\n#imageUpload[_ngcontent-%COMP%]{\\n    padding-right: 20px;\\n}\\n#imageUpload[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{\\ncolor: tomato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtBQUNoQjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0lBRUksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkI7QUFDQTtBQUNBLGFBQWE7QUFDYiIsImZpbGUiOiJwb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmR7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG59XG5tYXQtZm9ybS1maWVsZCwgdGV4dGFyZWF7XG53aWR0aDogMTAwJTtcbn1cbmlucHV0W3R5cGU9J2ZpbGUnXVxue1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbiNpbWFnZVVwbG9hZHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuI2ltYWdlVXBsb2FkIHB7XG5jb2xvcjogdG9tYXRvO1xufSJdfQ== */\"]\n});","map":{"version":3,"sources":["/var/www/html/Skill/mean/node_angular/frontend/src/app/post/post-create/post-create.component.ts"],"names":["EventEmitter","FormGroup","FormControl","Validators","Subject","mimeType","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","PostCreateComponent_mat_error_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostCreateComponent_mat_error_7_Template","PostCreateComponent_div_15_Template","ɵɵelement","ctx_r3","ɵɵnextContext","ɵɵadvance","ɵɵproperty","imagePreview","ɵɵsanitizeUrl","postForm","value","title","PostCreateComponent","constructor","postService","httpClient","authService","newPost","post2","postInput1","postInput2","isLoading","postsPerPage","currentPage","post","PostInputData","postsUpdated","inputData","ngOnInit","authStatusSub","getAuthStatusListener","subscribe","authStatus","validators","required","minLength","content","image","asyncValidators","onSubmit","invalid","postData","reset","onImagePicked","event","file","target","files","patchValue","get","updateValueAndValidity","reader","FileReader","onload","result","readAsDataURL","ngOnDestroy","unsubscribe","ɵfac","PostCreateComponent_Factory","t","ɵɵdirectiveInject","PostService","HttpClient","AuthService","ɵcmp","ɵɵdefineComponent","type","selectors","outputs","decls","vars","consts","template","PostCreateComponent_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","PostCreateComponent_Template_form_submit_1_listener","ɵɵtemplate","PostCreateComponent_Template_button_click_11_listener","ɵɵrestoreView","_r2","ɵɵreference","click","PostCreateComponent_Template_input_change_13_listener","$event","valid","directives","MatCard","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","MatFormField","DefaultValueAccessor","MatInput","NgControlStatus","FormControlName","NgIf","MatError","MatButton","styles"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;;AACA,SAASC,wCAAT,CAAkDC,EAAlD,EAAsDC,GAAtD,EAA2D;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AACrEX,IAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,WAArB;AACAb,IAAAA,EAAE,CAACc,MAAH,CAAU,CAAV,EAAa,oBAAb;AACAd,IAAAA,EAAE,CAACe,YAAH;AACH;AAAE;;AACH,SAASC,wCAAT,CAAkDL,EAAlD,EAAsDC,GAAtD,EAA2D;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AACrEX,IAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,WAArB;AACAb,IAAAA,EAAE,CAACc,MAAH,CAAU,CAAV,EAAa,sBAAb;AACAd,IAAAA,EAAE,CAACe,YAAH;AACH;AAAE;;AACH,SAASE,mCAAT,CAA6CN,EAA7C,EAAiDC,GAAjD,EAAsD;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAChEX,IAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,EAA5B;AACAb,IAAAA,EAAE,CAACkB,SAAH,CAAa,CAAb,EAAgB,KAAhB,EAAuB,EAAvB;AACAlB,IAAAA,EAAE,CAACe,YAAH;AACH;;AAAC,MAAIJ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMQ,MAAM,GAAGnB,EAAE,CAACoB,aAAH,EAAf;AACApB,IAAAA,EAAE,CAACqB,SAAH,CAAa,CAAb;AACArB,IAAAA,EAAE,CAACsB,UAAH,CAAc,KAAd,EAAqBH,MAAM,CAACI,YAA5B,EAA0CvB,EAAE,CAACwB,aAA7C,EAA4D,KAA5D,EAAmEL,MAAM,CAACM,QAAP,CAAgBC,KAAhB,CAAsBC,KAAzF;AACH;AAAE;;AACH,OAAO,MAAMC,mBAAN,CAA0B;AAC7BC,EAAAA,WAAW,CAACC,WAAD,EAAcC,UAAd,EAA0BC,WAA1B,EAAuC;AAC9C,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAe,aAAf;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,YAAL,GAAoB,IAAI5C,OAAJ,EAApB;AACA,SAAK6C,SAAL,GAAiB,IAAIjD,YAAJ,EAAjB;AACH;;AACDkD,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL,GAAqB,KAAKb,WAAL,CAChBc,qBADgB,GAEhBC,SAFgB,CAENC,UAAU,IAAI;AACzB,WAAKX,SAAL,GAAiB,KAAjB;AACH,KAJoB,CAArB;AAKA,SAAKZ,QAAL,GAAgB,IAAI9B,SAAJ,CAAc;AAC1BgC,MAAAA,KAAK,EAAE,IAAI/B,WAAJ,CAAgB,IAAhB,EAAsB;AACzBqD,QAAAA,UAAU,EAAE,CAACpD,UAAU,CAACqD,QAAZ,EAAsBrD,UAAU,CAACsD,SAAX,CAAqB,CAArB,CAAtB;AADa,OAAtB,CADmB;AAI1BC,MAAAA,OAAO,EAAE,IAAIxD,WAAJ,CAAgB,IAAhB,EAAsB;AAAEqD,QAAAA,UAAU,EAAE,CAACpD,UAAU,CAACqD,QAAZ;AAAd,OAAtB,CAJiB;AAK1BG,MAAAA,KAAK,EAAE,IAAIzD,WAAJ,CAAgB,IAAhB,EAAsB;AAAEqD,QAAAA,UAAU,EAAE,CAACpD,UAAU,CAACqD,QAAZ,CAAd;AAAqCI,QAAAA,eAAe,EAAE,CAACvD,QAAD;AAAtD,OAAtB;AALmB,KAAd,CAAhB,CANO,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GArC4B,CAsC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAwD,EAAAA,QAAQ,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,KAAK9B,QAAL,CAAc+B,OAAlB,EAA2B;AACvB;AACH;;AACD,SAAK1B,WAAL,CAAiB2B,QAAjB,CAA0B,KAAKhC,QAAL,CAAcC,KAAd,CAAoBC,KAA9C,EAAqD,KAAKF,QAAL,CAAcC,KAAd,CAAoB0B,OAAzE,EAAkF,KAAK3B,QAAL,CAAcC,KAAd,CAAoB2B,KAAtG;AACA,SAAK5B,QAAL,CAAciC,KAAd;AACH;;AACDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,SAAKtC,QAAL,CAAcuC,UAAd,CAAyB;AAAEX,MAAAA,KAAK,EAAEQ;AAAT,KAAzB;AACA,SAAKpC,QAAL,CAAcwC,GAAd,CAAkB,OAAlB,EAA2BC,sBAA3B;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClB,WAAK9C,YAAL,GAAoB4C,MAAM,CAACG,MAA3B;AACH,KAFD;;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBV,IAArB;AACH;;AACDW,EAAAA,WAAW,GAAG;AACV,SAAK3B,aAAL,CAAmB4B,WAAnB;AACH;;AAnG4B;;AAqGjC7C,mBAAmB,CAAC8C,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIhD,mBAAV,EAA+B5B,EAAE,CAAC6E,iBAAH,CAAqB5E,EAAE,CAAC6E,WAAxB,CAA/B,EAAqE9E,EAAE,CAAC6E,iBAAH,CAAqB3E,EAAE,CAAC6E,UAAxB,CAArE,EAA0G/E,EAAE,CAAC6E,iBAAH,CAAqB1E,EAAE,CAAC6E,WAAxB,CAA1G,CAAP;AAAyJ,CAA9N;;AACApD,mBAAmB,CAACqD,IAApB,GAA2B,aAAcjF,EAAE,CAACkF,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEvD,mBAAR;AAA6BwD,EAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAxC;AAA+DC,EAAAA,OAAO,EAAE;AAAE1C,IAAAA,SAAS,EAAE;AAAb,GAAxE;AAAoG2C,EAAAA,KAAK,EAAE,EAA3G;AAA+GC,EAAAA,IAAI,EAAE,CAArH;AAAwHC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,WAAJ,EAAiB,QAAjB,CAAD,EAA6B,CAAC,MAAD,EAAS,MAAT,EAAiB,iBAAjB,EAAoC,OAApC,EAA6C,UAA7C,EAAyD,EAAzD,EAA6D,aAA7D,EAA4E,aAA5E,CAA7B,EAAyH,CAAC,CAAD,EAAI,MAAJ,CAAzH,EAAsI,CAAC,MAAD,EAAS,MAAT,EAAiB,iBAAjB,EAAoC,SAApC,EAA+C,UAA/C,EAA2D,EAA3D,EAA+D,aAA/D,EAA8E,eAA9E,CAAtI,EAAsO,CAAC,IAAD,EAAO,aAAP,CAAtO,EAA6P,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,CAA7C,EAAgD,OAAhD,CAA7P,EAAuT,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,QAApB,CAAvT,EAAsV,CAAC,YAAD,EAAe,EAAf,CAAtV,EAA0W,CAAC,OAAD,EAAU,eAAV,EAA2B,CAA3B,EAA8B,MAA9B,CAA1W,EAAiZ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,OAA1B,EAAmC,SAAnC,EAA8C,MAA9C,EAAsD,QAAtD,CAAjZ,EAAkd,CAAC,CAAD,EAAI,eAAJ,CAAld,EAAwe,CAAC,CAAD,EAAI,KAAJ,EAAW,KAAX,CAAxe,CAAhI;AAA4nBC,EAAAA,QAAQ,EAAE,SAASC,4BAAT,CAAsC/E,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzvB,YAAMgF,GAAG,GAAG3F,EAAE,CAAC4F,gBAAH,EAAZ;;AACA5F,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,UAArB,EAAiC,CAAjC,EAAoC,MAApC,EAA4C,CAA5C;AACAb,MAAAA,EAAE,CAAC6F,UAAH,CAAc,QAAd,EAAwB,SAASC,mDAAT,GAA+D;AAAE,eAAOlF,GAAG,CAAC2C,QAAJ,EAAP;AAAwB,OAAjH;AACAvD,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,gBAArB;AACAb,MAAAA,EAAE,CAACkB,SAAH,CAAa,CAAb,EAAgB,OAAhB,EAAyB,CAAzB;AACAlB,MAAAA,EAAE,CAAC+F,UAAH,CAAc,CAAd,EAAiBrF,wCAAjB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,WAAjE,EAA8E,CAA9E;AACAV,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,gBAArB;AACAb,MAAAA,EAAE,CAACkB,SAAH,CAAa,CAAb,EAAgB,OAAhB,EAAyB,CAAzB;AACAlB,MAAAA,EAAE,CAAC+F,UAAH,CAAc,CAAd,EAAiB/E,wCAAjB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,WAAjE,EAA8E,CAA9E;AACAhB,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC;AACAb,MAAAA,EAAE,CAACc,MAAH,CAAU,EAAV,EAAc,cAAd;AACAd,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAb,MAAAA,EAAE,CAAC6F,UAAH,CAAc,OAAd,EAAuB,SAASG,qDAAT,GAAiE;AAAEhG,QAAAA,EAAE,CAACiG,aAAH,CAAiBN,GAAjB;;AAAuB,cAAMO,GAAG,GAAGlG,EAAE,CAACmG,WAAH,CAAe,EAAf,CAAZ;;AAAgC,eAAOD,GAAG,CAACE,KAAJ,EAAP;AAAqB,OAAtK;AACApG,MAAAA,EAAE,CAACc,MAAH,CAAU,EAAV,EAAc,UAAd;AACAd,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,EAAlB,EAAsB,OAAtB,EAA+B,CAA/B,EAAkC,CAAlC;AACAb,MAAAA,EAAE,CAAC6F,UAAH,CAAc,QAAd,EAAwB,SAASQ,qDAAT,CAA+DC,MAA/D,EAAuE;AAAE,eAAO1F,GAAG,CAAC+C,aAAJ,CAAkB2C,MAAlB,CAAP;AAAmC,OAApI;AACAtG,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAAC+F,UAAH,CAAc,EAAd,EAAkB9E,mCAAlB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,KAA7D,EAAoE,CAApE;AACAjB,MAAAA,EAAE,CAACa,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAb,MAAAA,EAAE,CAACc,MAAH,CAAU,EAAV,EAAc,WAAd;AACAd,MAAAA,EAAE,CAACe,YAAH;AACH;;AAAC,QAAIJ,EAAE,GAAG,CAAT,EAAY;AACVX,MAAAA,EAAE,CAACqB,SAAH,CAAa,CAAb;AACArB,MAAAA,EAAE,CAACsB,UAAH,CAAc,WAAd,EAA2BV,GAAG,CAACa,QAA/B;AACAzB,MAAAA,EAAE,CAACqB,SAAH,CAAa,CAAb;AACArB,MAAAA,EAAE,CAACsB,UAAH,CAAc,MAAd,EAAsBV,GAAG,CAACa,QAAJ,CAAawC,GAAb,CAAiB,OAAjB,EAA0BT,OAAhD;AACAxD,MAAAA,EAAE,CAACqB,SAAH,CAAa,CAAb;AACArB,MAAAA,EAAE,CAACsB,UAAH,CAAc,MAAd,EAAsBV,GAAG,CAACa,QAAJ,CAAawC,GAAb,CAAiB,SAAjB,EAA4BT,OAAlD;AACAxD,MAAAA,EAAE,CAACqB,SAAH,CAAa,CAAb;AACArB,MAAAA,EAAE,CAACsB,UAAH,CAAc,MAAd,EAAsBV,GAAG,CAACW,YAAJ,KAAqB,EAArB,IAA2BX,GAAG,CAACW,YAA/B,IAA+CX,GAAG,CAACa,QAAJ,CAAawC,GAAb,CAAiB,OAAjB,EAA0BsC,KAA/F;AACH;AAAE,GAnCuD;AAmCrDC,EAAAA,UAAU,EAAE,CAACpG,EAAE,CAACqG,OAAJ,EAAapG,EAAE,CAACqG,aAAhB,EAA+BrG,EAAE,CAACsG,oBAAlC,EAAwDtG,EAAE,CAACuG,kBAA3D,EAA+EtG,EAAE,CAACuG,YAAlF,EAAgGxG,EAAE,CAACyG,oBAAnG,EAAyHvG,EAAE,CAACwG,QAA5H,EAAsI1G,EAAE,CAAC2G,eAAzI,EAA0J3G,EAAE,CAAC4G,eAA7J,EAA8KzG,EAAE,CAAC0G,IAAjL,EAAuL5G,EAAE,CAAC6G,QAA1L,EAAoM1G,EAAE,CAAC2G,SAAvM,CAnCyC;AAmC0KC,EAAAA,MAAM,EAAE,CAAC,2hCAAD;AAnClL,CAArB,CAAzC","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport { mimeType } from \"../../mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../post.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../auth/auth.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nfunction PostCreateComponent_mat_error_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter title\");\n    i0.ɵɵelementEnd();\n} }\nfunction PostCreateComponent_mat_error_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter content\");\n    i0.ɵɵelementEnd();\n} }\nfunction PostCreateComponent_div_15_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r3.postForm.value.title);\n} }\nexport class PostCreateComponent {\n    constructor(postService, httpClient, authService) {\n        this.postService = postService;\n        this.httpClient = httpClient;\n        this.authService = authService;\n        this.newPost = 'mean-course';\n        this.post2 = \"\";\n        this.postInput1 = \"\";\n        this.postInput2 = \"\";\n        this.isLoading = true;\n        this.postsPerPage = 2;\n        this.currentPage = 1;\n        this.post = [];\n        this.PostInputData = [];\n        this.postsUpdated = new Subject();\n        this.inputData = new EventEmitter();\n    }\n    ngOnInit() {\n        this.authStatusSub = this.authService\n            .getAuthStatusListener()\n            .subscribe(authStatus => {\n            this.isLoading = false;\n        });\n        this.postForm = new FormGroup({\n            title: new FormControl(null, {\n                validators: [Validators.required, Validators.minLength(3)]\n            }),\n            content: new FormControl(null, { validators: [Validators.required] }),\n            image: new FormControl(null, { validators: [Validators.required], asyncValidators: [mimeType] })\n        });\n        // this.isLoading = false;\n        //   this.postService.getPosts(this.postsPerPage, this.currentPage);\n        //   this.postsSub = this.postService.getPostUpdateListener()\n        //     .subscribe((postData: {posts: Post[], postCount: number}) => {\n        //       this.isLoading = false;\n        //       this.post = postData.posts;\n        //     });\n    }\n    // onAddPost() {\n    //   this.newPost = 'CONTENT';\n    // }\n    // onAddPost1(postInput) {\n    //   this.newPost = postInput.value;\n    // }\n    // onAddPost2() {\n    //   this.newPost = this.post2;\n    // }\n    // onAddPost3() {\n    //   const posts = {\n    //     title: this.postInput1,\n    //     content: this.postInput2\n    //   };\n    //   this.postService.getAllData()\n    //     .subscribe((data: any) => {\n    //       this.posts = data.posts;\n    //       console.log(data.posts);\n    //       this.inputData.emit(data.posts);\n    //     });\n    // }\n    onSubmit() {\n        // if (this.postForm.invalid) {\n        //   return;\n        // }\n        // else {\n        //   const post = {\n        //     title: this.postForm.value.title,\n        //     content: this.postForm.value.content,\n        //     image: this.postForm.value.image\n        //   };\n        //   this.postService.postData(post)\n        //     .subscribe((responseData: any) => {\n        //       const post: Post = {\n        //         id: responseData.postId,\n        //         title: responseData.title,\n        //         content: responseData.content\n        //       };\n        //         this.PostInputData.push(post);\n        //       this.inputData.emit(post);\n        //       this.postForm.reset();\n        //     });\n        // }\n        if (this.postForm.invalid) {\n            return;\n        }\n        this.postService.postData(this.postForm.value.title, this.postForm.value.content, this.postForm.value.image);\n        this.postForm.reset();\n    }\n    onImagePicked(event) {\n        const file = event.target.files[0];\n        this.postForm.patchValue({ image: file });\n        this.postForm.get('image').updateValueAndValidity();\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.imagePreview = reader.result;\n        };\n        reader.readAsDataURL(file);\n    }\n    ngOnDestroy() {\n        this.authStatusSub.unsubscribe();\n    }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) { return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthService)); };\nPostCreateComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PostCreateComponent, selectors: [[\"app-post-create\"]], outputs: { inputData: \"inputData\" }, decls: 18, vars: 4, consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"title\", \"matInput\", \"\", \"placeholder\", \"Enter title\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"content\", \"matInput\", \"\", \"placeholder\", \"Enter content\"], [\"id\", \"imageUpload\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]], template: function PostCreateComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() { return ctx.onSubmit(); });\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵtemplate(4, PostCreateComponent_mat_error_4_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, PostCreateComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"p\");\n        i0.ɵɵtext(10, \"Image Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function PostCreateComponent_Template_button_click_11_listener() { i0.ɵɵrestoreView(_r4); const _r2 = i0.ɵɵreference(14); return _r2.click(); });\n        i0.ɵɵtext(12, \"pickfile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6, 7);\n        i0.ɵɵlistener(\"change\", function PostCreateComponent_Template_input_change_13_listener($event) { return ctx.onImagePicked($event); });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, PostCreateComponent_div_15_Template, 2, 2, \"div\", 8);\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Save post\");\n        i0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"title\").invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"content\").invalid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.imagePreview !== \"\" && ctx.imagePreview && ctx.postForm.get(\"image\").valid);\n    } }, directives: [i4.MatCard, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i5.DefaultValueAccessor, i7.MatInput, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i6.MatError, i9.MatButton], styles: [\"mat-card[_ngcontent-%COMP%]{\\n    width: 80%;\\n    margin: auto;\\n}\\nmat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{\\nwidth: 100%;\\n}\\ninput[type='file'][_ngcontent-%COMP%]\\n{\\n    visibility: hidden;\\n}\\n#imageUpload[_ngcontent-%COMP%]{\\n    padding-right: 20px;\\n}\\n#imageUpload[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{\\ncolor: tomato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtBQUNoQjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7O0lBRUksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkI7QUFDQTtBQUNBLGFBQWE7QUFDYiIsImZpbGUiOiJwb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmR7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG59XG5tYXQtZm9ybS1maWVsZCwgdGV4dGFyZWF7XG53aWR0aDogMTAwJTtcbn1cbmlucHV0W3R5cGU9J2ZpbGUnXVxue1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbiNpbWFnZVVwbG9hZHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuI2ltYWdlVXBsb2FkIHB7XG5jb2xvcjogdG9tYXRvO1xufSJdfQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}