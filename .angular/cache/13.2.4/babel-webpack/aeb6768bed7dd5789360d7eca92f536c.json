{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport { mimeType } from \"../../mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../post.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../auth/auth.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction PostCreateComponent_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter title\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter content\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostCreateComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r3.postForm.value.title);\n  }\n}\n\nexport let PostCreateComponent = /*#__PURE__*/(() => {\n  class PostCreateComponent {\n    constructor(postService, httpClient, authService) {\n      this.postService = postService;\n      this.httpClient = httpClient;\n      this.authService = authService;\n      this.newPost = 'mean-course';\n      this.post2 = \"\";\n      this.postInput1 = \"\";\n      this.postInput2 = \"\";\n      this.isLoading = true;\n      this.postsPerPage = 2;\n      this.currentPage = 1;\n      this.post = [];\n      this.PostInputData = [];\n      this.postsUpdated = new Subject();\n      this.inputData = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n        this.isLoading = false;\n      });\n      this.postForm = new FormGroup({\n        title: new FormControl(null, {\n          validators: [Validators.required, Validators.minLength(3)]\n        }),\n        content: new FormControl(null, {\n          validators: [Validators.required]\n        }),\n        image: new FormControl(null, {\n          validators: [Validators.required],\n          asyncValidators: [mimeType]\n        })\n      }); // this.isLoading = false;\n      //   this.postService.getPosts(this.postsPerPage, this.currentPage);\n      //   this.postsSub = this.postService.getPostUpdateListener()\n      //     .subscribe((postData: {posts: Post[], postCount: number}) => {\n      //       this.isLoading = false;\n      //       this.post = postData.posts;\n      //     });\n    } // onAddPost() {\n    //   this.newPost = 'CONTENT';\n    // }\n    // onAddPost1(postInput) {\n    //   this.newPost = postInput.value;\n    // }\n    // onAddPost2() {\n    //   this.newPost = this.post2;\n    // }\n    // onAddPost3() {\n    //   const posts = {\n    //     title: this.postInput1,\n    //     content: this.postInput2\n    //   };\n    //   this.postService.getAllData()\n    //     .subscribe((data: any) => {\n    //       this.posts = data.posts;\n    //       console.log(data.posts);\n    //       this.inputData.emit(data.posts);\n    //     });\n    // }\n\n\n    onSubmit() {\n      // if (this.postForm.invalid) {\n      //   return;\n      // }\n      // else {\n      //   const post = {\n      //     title: this.postForm.value.title,\n      //     content: this.postForm.value.content,\n      //     image: this.postForm.value.image\n      //   };\n      //   this.postService.postData(post)\n      //     .subscribe((responseData: any) => {\n      //       const post: Post = {\n      //         id: responseData.postId,\n      //         title: responseData.title,\n      //         content: responseData.content\n      //       };\n      //         this.PostInputData.push(post);\n      //       this.inputData.emit(post);\n      //       this.postForm.reset();\n      //     });\n      // }\n      if (this.postForm.invalid) {\n        return;\n      }\n\n      this.postService.postData(this.postForm.value.title, this.postForm.value.content, this.postForm.value.image);\n      this.postForm.reset();\n    }\n\n    onImagePicked(event) {\n      const file = event.target.files[0];\n      this.postForm.patchValue({\n        image: file\n      });\n      this.postForm.get('image').updateValueAndValidity();\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.imagePreview = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    }\n\n    ngOnDestroy() {\n      this.authStatusSub.unsubscribe();\n    }\n\n  }\n\n  PostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n    return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthServices));\n  };\n\n  PostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostCreateComponent,\n    selectors: [[\"app-post-create\"]],\n    outputs: {\n      inputData: \"inputData\"\n    },\n    decls: 18,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"title\", \"matInput\", \"\", \"placeholder\", \"Enter title\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"content\", \"matInput\", \"\", \"placeholder\", \"Enter content\"], [\"id\", \"imageUpload\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\", 3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]],\n    template: function PostCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵtemplate(4, PostCreateComponent_mat_error_4_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, PostCreateComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"p\");\n        i0.ɵɵtext(10, \"Image Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function PostCreateComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r2 = i0.ɵɵreference(14);\n\n          return _r2.click();\n        });\n        i0.ɵɵtext(12, \"pickfile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6, 7);\n        i0.ɵɵlistener(\"change\", function PostCreateComponent_Template_input_change_13_listener($event) {\n          return ctx.onImagePicked($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, PostCreateComponent_div_15_Template, 2, 2, \"div\", 8);\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Save post\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"title\").invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.postForm.get(\"content\").invalid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.imagePreview !== \"\" && ctx.imagePreview && ctx.postForm.get(\"image\").valid);\n      }\n    },\n    directives: [i4.MatCard, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i5.DefaultValueAccessor, i7.MatInput, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i6.MatError, i9.MatButton],\n    styles: [\"mat-card[_ngcontent-%COMP%]{width:80%;margin:auto}mat-form-field[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%}input[type=file][_ngcontent-%COMP%]{visibility:hidden}#imageUpload[_ngcontent-%COMP%]{padding-right:20px}#imageUpload[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:tomato}\"]\n  });\n  return PostCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}